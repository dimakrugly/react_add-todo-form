{"version":3,"sources":["api/users.ts","utils/getUserById.ts","utils/generateNewId.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","users","find","user","generateNewId","todos","idArray","map","todo","Math","max","TodoForm","onSubmit","todosArr","useState","title","setTitle","isTitleError","setIsTitleError","userId","setUserId","isUserIdError","setIsUserIdError","action","method","e","preventDefault","trim","completed","className","placeholder","type","value","onChange","target","disabled","UserInfo","href","TodoInfo","cn","TodoList","initialTodos","usersFromServer","App","setTodos","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f145cde.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User, Users } from '../types/User';\n\nexport const getUserById = (id: number, users: Users): User | null => users\n  .find(user => user.id === id) || null;\n","import { Todos } from '../types/Todo';\n\nexport const generateNewId = (todos: Todos): number => {\n  const idArray = todos.map(todo => todo.id);\n\n  return Math.max(...idArray) + 1;\n};\n","import { useState } from 'react';\nimport { Todo, Todos } from '../../types/Todo';\nimport { Users } from '../../types/User';\nimport { getUserById } from '../../utils/getUserById';\nimport { generateNewId } from '../../utils/generateNewId';\n\ninterface Props {\n  onSubmit: (todo: Todo) => void,\n  users: Users,\n  todosArr: Todos,\n}\n\nexport const TodoForm: React.FC<Props> = ({\n  onSubmit,\n  users,\n  todosArr,\n}) => {\n  const [title, setTitle] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [isUserIdError, setIsUserIdError] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (title.trim() === '' || userId === 0) {\n      setIsTitleError(title.trim() === '');\n      setIsUserIdError(userId === 0);\n    } else {\n      setIsTitleError(false);\n      setIsUserIdError(false);\n\n      onSubmit({\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId, users),\n        id: generateNewId(todosArr),\n      });\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setIsUserIdError(false);\n  };\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsTitleError(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          placeholder=\"Please enter a title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleInput}\n        />\n        { isTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          placeholder=\"Please choose a user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleSelect}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {users.map(user => {\n            const { name, id } = user;\n\n            return <option value={id} key={id}>{name}</option>;\n          })}\n        </select>\n        {isUserIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todos } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todos,\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './utils/getUserById';\nimport { Todo, Todos } from './types/Todo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nconst initialTodos = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId, usersFromServer),\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todos>(initialTodos);\n\n  const addTodo = (todo: Todo): void => {\n    setTodos((prev) => {\n      return [\n        ...prev, {\n          ...todo,\n        },\n      ];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        onSubmit={addTodo}\n        users={usersFromServer}\n        todosArr={todos}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}